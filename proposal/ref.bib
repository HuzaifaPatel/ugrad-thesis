@article{popek1974formal,
  title={Formal requirements for virtualizable third generation architectures},
  author={Popek, Gerald J and Goldberg, Robert P},
  journal={Communications of the ACM},
  volume={17},
  number={7},
  pages={412--421},
  year={1974},
  publisher={ACM New York, NY, USA}
}

@book{somayaji2002operating,
  title={Operating system stability and security through process homeostasis},
  author={Somayaji, Anil Buntwal},
  year={2002},
  publisher={The University of New Mexico}
}


@inproceedings{win2014virtual,
  title={Virtual machine introspection},
  author={Win, Thu Yein and Tianfield, Huaglory and Mair, Quentin and Said, Taimur Al and Rana, Omer F},
  booktitle={Proceedings of the 7th International Conference on Security of Information and Networks},
  pages={405--410},
  year={2014}
}


@Inbook{Payne2011,
author="Payne, Bryan D.",
editor="van Tilborg, Henk C. A.
and Jajodia, Sushil",
title="Virtual Machine Introspection",
bookTitle="Encyclopedia of Cryptography and Security",
year="2011",
publisher="Springer US",
address="Boston, MA",
pages="1360--1362",
isbn="978-1-4419-5906-5",
doi="10.1007/978-1-4419-5906-5_647",
url="https://doi.org/10.1007/978-1-4419-5906-5_647"
}


@InProceedings{10.1007/978-3-642-25141-2_7,
author="Pfoh, Jonas
and Schneider, Christian
and Eckert, Claudia",
editor="Iwata, Tetsu
and Nishigaki, Masakatsu",
title="Nitro: Hardware-Based System Call Tracing for Virtual Machines",
booktitle="Advances in Information and Computer Security",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="96--112",
abstract="Virtual machine introspection (VMI) describes the method of monitoring and analyzing the state of a virtual machine from the hypervisor level. This lends itself well to security applications, though the hardware virtualization support from Intel and AMD was not designed with VMI in mind. This results in many challenges for developers of hardware-supported VMI systems. This paper describes the design and implementation of our prototype framework, Nitro, for system call tracing and monitoring. Since Nitro is a purely VMI-based system, it remains isolated from attacks originating within the guest operating system and is not directly visible from within the guest. Nitro is extremely flexible as it supports all three system call mechanisms provided by the Intel x86 architecture and has been proven to work in Windows, Linux, 32-bit, and 64-bit environments. The high performance of our system allows for real-time capturing and dissemination of data without hindering usability. This is supported by extensive testing with various guest operating systems. In addition, Nitro is resistant to circumvention attempts due to a construction called hardware rooting. Finally, Nitro surpasses similar systems in both performance and functionality.",
isbn="978-3-642-25141-2"
}



@book{tanenbaum2009modern,
  title={Modern operating systems},
  author={Tanenbaum, Andrew},
  year={2009},
  publisher={Pearson Education, Inc.,}
}



@inproceedings{hebbal2015virtual,
  title={Virtual machine introspection: Techniques and applications},
  author={Hebbal, Yacine and Laniepce, Sylvie and Menaud, Jean-Marc},
  booktitle={2015 10th international conference on availability, reliability and security},
  pages={676--685},
  year={2015},
  organization={IEEE}
}


@inproceedings{pfoh2009formal,
  title={A formal model for virtual machine introspection},
  author={Pfoh, Jonas and Schneider, Christian and Eckert, Claudia},
  booktitle={Proceedings of the 1st ACM workshop on Virtual machine security},
  pages={1--10},
  year={2009}
}



@article{10.1145/2775111,
author = {Bauman, Erick and Ayoade, Gbadebo and Lin, Zhiqiang},
title = {A Survey on Hypervisor-Based Monitoring: Approaches, Applications, and Evolutions},
year = {2015},
issue_date = {September 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {48},
number = {1},
issn = {0360-0300},
url = {https://doi.org/10.1145/2775111},
doi = {10.1145/2775111},
abstract = {When designing computer monitoring systems, one goal has always been to have a complete view of the monitored target and at the same time stealthily protect the monitor itself. One way to achieve this is to use hypervisor-based, or more generally out of virtual machine (VM)-based, monitoring. There are, however, challenges that limit the use of this mechanism; the most significant of these is the semantic gap problem. Over the past decade, a considerable amount of research has been carried out to bridge the semantic gap and develop all kinds of out-of-VM monitoring techniques and applications. By tracing the evolution of out-of-VM security solutions, this article examines and classifies different approaches that have been proposed to overcome the semantic gap—the fundamental challenge in hypervisor-based monitoring—and how they have been used to develop various security applications. In particular, we review how the past approaches address different constraints, such as practicality, flexibility, coverage, and automation, while bridging the semantic gap; how they have developed different monitoring systems; and how the monitoring systems have been applied and deployed. In addition to systematizing all of the proposed techniques, we also discuss the remaining research problems and shed light on the future directions of hypervisor-based monitoring.},
journal = {ACM Comput. Surv.},
month = {aug},
articleno = {10},
numpages = {33},
keywords = {malware, introspection, monitoring, VM, Virtualization, hypervisor, isolation, integrity, semantic gap, detection, virtual machine monitor}
}


@inproceedings{arcangeli2019micro,
  title={Micro-optimizing kvm vm-exits},
  author={Arcangeli, Andrea},
  booktitle={KVM Forum},
  year={2019}
}



@phdthesis{findlay2021practical,
  title={A Practical, Lightweight, and Flexible Confinement Framework in eBPF},
  author={Findlay, William Patrick},
  year={2021},
  school={Carleton University}
}



@book{van2021computer,
  title={Computer Security and the Internet: Tools and Jewels from Malware to Bitcoin},
  author={Van Oorschot, Paul C},
  year={2021},
  publisher={Springer}
}



@article{panker2021leveraging,
  title={Leveraging malicious behavior traces from volatile memory using machine learning methods for trusted unknown malware detection in Linux cloud environments},
  author={Panker, Tomer and Nissim, Nir},
  journal={Knowledge-Based Systems},
  volume={226},
  pages={107095},
  year={2021},
  publisher={Elsevier}
}


@article{BELLO2021103441,
title = {Cloud computing in construction industry: Use cases, benefits and challenges},
journal = {Automation in Construction},
volume = {122},
pages = {103441},
year = {2021},
issn = {0926-5805},
doi = {https://doi.org/10.1016/j.autcon.2020.103441},
url = {https://www.sciencedirect.com/science/article/pii/S0926580520310219},
author = {Sururah A. Bello and Lukumon O. Oyedele and Olugbenga O. Akinade and Muhammad Bilal and Juan Manuel {Davila Delgado} and Lukman A. Akanbi and Anuoluwapo O. Ajayi and Hakeem A. Owolabi},
keywords = {Cloud computing, Emerging technologies, Construction industry, Future trends},
abstract = {Cloud computing technologies have revolutionised several industries for several years. Although the construction industry is well placed to leverage these technologies for competitive and operational advantage, the diffusion of the technologies in the industry follows a steep curve. This study therefore highlights the current contributions and use cases of cloud computing in construction practices. As such, a systematic review was carried out using ninety-two (92) peer-reviewed publications, published between 2009 and 2019. A key highlight of the findings is that cloud computing is an innovation delivery enabler for other emerging technologies (building information modelling, internet of things, virtual reality, augmented reality, big data analytics) in the construction industry. As such, this paper brings to the fore, current and future application areas of cloud computing in the construction industry. The paper also identifies barriers to broader adoption of cloud computing in the construction industry and discusses strategies for overcoming these barriers.}
}



@article{meier2008ibm,
  title={IBM systems virtualization: Servers, storage, and software},
  author={Meier, Shannon and Virun, Bill and Blumert, Joshua and Jones, M Tim},
  journal={IBM Redbook, May},
  year={2008}
}



@article{graziano2011performance,
  title={A performance analysis of Xen and KVM hypervisors for hosting the Xen Worlds Project},
  author={Graziano, Charles David},
  year={2011},
  publisher={Iowa State University}
}




@article{diallo2017fault,
  title={What is a fault? and why does it matter?},
  author={Diallo, Nafi and Ghardallou, Wided and Desharnais, Jules and Frias, Marcelo and Jaoua, Ali and Mili, Ali},
  journal={Innovations in Systems and Software Engineering},
  volume={13},
  number={2},
  pages={219--239},
  year={2017},
  publisher={Springer}
}



@Inbook{Wiley2011,
author="Wiley, Jeffrey J.",
editor="van Tilborg, Henk C. A.
and Jajodia, Sushil",
title="Protection Rings",
bookTitle="Encyclopedia of Cryptography and Security",
year="2011",
publisher="Springer US",
address="Boston, MA",
pages="988--990",
isbn="978-1-4419-5906-5",
doi="10.1007/978-1-4419-5906-5_788",
url="https://doi.org/10.1007/978-1-4419-5906-5_788"
}



@article{bhushanmodelling,
  title={Modelling and Formally Verifying Intel VT-x: Hardware Assistance for Processors Running Virtualization Platforms},
  author={Bhushan, Ram Chandra and Yadav, Dharmendra K}
}



@article{goto2011kernel,
  title={Kernel-based virtual machine technology},
  author={Goto, Yasunori},
  journal={Fujitsu Scientific and Technical Journal},
  volume={47},
  number={3},
  pages={362--368},
  year={2011}
}




@book{chirammal2016mastering,
  title={Mastering KVM virtualization},
  author={Chirammal, Humble Devassy and Mukhedkar, Prasad and Vettathu, Anil},
  year={2016},
  publisher={Packt Publishing Ltd}
}



@inproceedings{garfinkel2003virtual,
  title={A virtual machine introspection based architecture for intrusion detection.},
  author={Garfinkel, Tal and Rosenblum, Mendel and others},
  booktitle={Ndss},
  volume={3},
  number={2003},
  pages={191--206},
  year={2003},
  organization={San Diega, CA}
}



@inproceedings{bhatt2018using,
  title={Using virtual machine introspection for operating systems security education},
  author={Bhatt, Manish and Ahmed, Irfan and Lin, Zhiqiang},
  booktitle={Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
  pages={396--401},
  year={2018}
}


@article{bauman2015survey,
  title={A survey on hypervisor-based monitoring: approaches, applications, and evolutions},
  author={Bauman, Erick and Ayoade, Gbadebo and Lin, Zhiqiang},
  journal={ACM Computing Surveys (CSUR)},
  volume={48},
  number={1},
  pages={1--33},
  year={2015},
  publisher={ACM New York, NY, USA}
}



@inproceedings{luo2022teaching,
  title={On Teaching Malware Analysis on Latest Windows},
  author={Luo, Lan and Zou, Cliff and Narain, Sashan and Fu, Xinwen},
  booktitle={Journal of The Colloquium for Information Systems Security Education},
  volume={9},
  number={1},
  pages={7--7},
  year={2022}
}



@inproceedings{poon2012improving,
  title={Improving the latency of VMExit forwarding in recursive virtualization for the x86 architecture},
  author={Poon, Wing-Chi and Mok, Aloysius K},
  booktitle={2012 45th Hawaii International Conference on System Sciences},
  pages={5604--5612},
  year={2012},
  organization={IEEE}
}


@article{case2021fixing,
  title={Fixing a Memory Forensics Blind Spot: Linux Kernel Tracing},
  author={Case, Andrew and Richard III, Golden G},
  year={2021}
}



@inproceedings{kvmcpuschedule,
  title={Understanding KVM CPU scheduler algorithm},
  author={Khan, Michel},
  booktitle={Stackoverflow},
  year={2018}
}


@inproceedings{mitOperatingSystemEngineering,
  title={Interrupt and Exception Handling on the x86},
  author={Unknown},
  booktitle={Interrupt and Exception Handling on the x86},
  year={Unknown}
}


@inproceedings{intelMSRManual,
  title={Model Specific Registers and Functions},
  author={Intel},
  booktitle={Embedded Pentium Processor Family Developer’s Manual},
  year={Unknown}
}


@article{lipp2018meltdown,
  title={Meltdown},
  author={Lipp, Moritz and Schwarz, Michael and Gruss, Daniel and Prescher, Thomas and Haas, Werner and Mangard, Stefan and Kocher, Paul and Genkin, Daniel and Yarom, Yuval and Hamburg, Mike},
  journal={arXiv preprint arXiv:1801.01207},
  year={2018}
}


@inproceedings{intelvirtualizationlist,
  title={Intel Virtualization Technology List},
  author={Intel},
  booktitle={Intel® Virtualization Technology List},
  year={Unknown},
  link={https://archive.wikiwix.com/cache/index2.php?rev_t=20101027065321&url=http%3A%2Fark.intel.com%2FVTList.aspx#federation=archive.wikiwix.com&tab=url}
}


@article{osdevwikivmx,
  title={VMX},
  author={Unknown},
  url={https://wiki.osdev.org/VMX}
}


@article{vmread,
  title={vmread},
  author={Unknown},
  url={https://www.felixcloutier.com/x86/vmread}
}


@article{vmwrite,
  title={vmwrite},
  author={Unknown},
  url={https://www.felixcloutier.com/x86/vmwrite}
}


@article{vmcall,
  title={vmcall},
  author={Unknown},
  url={https://www.felixcloutier.com/x86/vmcall}
}