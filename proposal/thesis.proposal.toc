\contentsline {chapter}{Abstract}{i}{chapter*.1}%
\contentsline {chapter}{Acknowledgments}{ii}{chapter*.2}%
\contentsline {chapter}{Nomenclature}{vi}{chapter*.4}%
\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}%
\contentsline {section}{\numberline {1.1}Motivation}{2}{section.1.1}%
\contentsline {subsection}{\numberline {1.1.1}Why Design a New Framework?}{4}{subsection.1.1.1}%
\contentsline {subsection}{\numberline {1.1.2}Why Out-Of-VM monitor?}{4}{subsection.1.1.2}%
\contentsline {subsection}{\numberline {1.1.3}Why eBPF?}{4}{subsection.1.1.3}%
\contentsline {subsection}{\numberline {1.1.4}Why Sequences of System Calls?}{4}{subsection.1.1.4}%
\contentsline {section}{\numberline {1.2}Problem}{4}{section.1.2}%
\contentsline {subsection}{\numberline {1.2.1}The Semantic Gap Problem}{4}{subsection.1.2.1}%
\contentsline {section}{\numberline {1.3}Approaching the Problem}{4}{section.1.3}%
\contentsline {section}{\numberline {1.4}Contributions}{4}{section.1.4}%
\contentsline {section}{\numberline {1.5}Thesis Organization}{4}{section.1.5}%
\contentsline {chapter}{\numberline {2}Background}{5}{chapter.2}%
\contentsline {section}{\numberline {2.1}Hypervisor}{5}{section.2.1}%
\contentsline {section}{\numberline {2.2}Intel Virtualization Extention (VT-X)}{6}{section.2.2}%
\contentsline {section}{\numberline {2.3}The Kernel Virtual Machine Hypervisor}{6}{section.2.3}%
\contentsline {subsection}{\numberline {2.3.1}Model Specific Registers}{7}{subsection.2.3.1}%
\contentsline {subsection}{\numberline {2.3.2}VMCS}{7}{subsection.2.3.2}%
\contentsline {subsection}{\numberline {2.3.3}VM ENTRY Context Switch}{7}{subsection.2.3.3}%
\contentsline {subsection}{\numberline {2.3.4}VM EXIT Context Switch}{7}{subsection.2.3.4}%
\contentsline {section}{\numberline {2.4}QEMU}{7}{section.2.4}%
\contentsline {section}{\numberline {2.5}System Calls}{7}{section.2.5}%
\contentsline {section}{\numberline {2.6}Virtual Machine Introspection}{7}{section.2.6}%
\contentsline {section}{\numberline {2.7}eBPF}{7}{section.2.7}%
\contentsline {section}{\numberline {2.8}The Linux Kernel Tracepoint API}{7}{section.2.8}%
\contentsline {section}{\numberline {2.9}pH-based Sequences of System Call}{7}{section.2.9}%
\contentsline {chapter}{\numberline {3}Related work}{8}{chapter.3}%
\contentsline {section}{\numberline {3.1}Nitro: Hardware-Based System Call Tracing for Virtual Machines}{8}{section.3.1}%
\contentsline {chapter}{\numberline {4}Designing Frail}{9}{chapter.4}%
\contentsline {chapter}{\numberline {5}Implementing Frail}{10}{chapter.5}%
\contentsline {section}{\numberline {5.1}User Space Component}{10}{section.5.1}%
\contentsline {section}{\numberline {5.2}Kernel Space Component}{10}{section.5.2}%
\contentsline {subsection}{\numberline {5.2.1}Custom Linux Kernel Tracepoint}{10}{subsection.5.2.1}%
\contentsline {subsection}{\numberline {5.2.2}Kernel Module}{10}{subsection.5.2.2}%
\contentsline {section}{\numberline {5.3}Tracing Processess}{10}{section.5.3}%
\contentsline {section}{\numberline {5.4}Proof of Tracability of all KVM Guest System Calls}{10}{section.5.4}%
\contentsline {chapter}{\numberline {6}Threat Model of Frail}{11}{chapter.6}%
\contentsline {chapter}{\numberline {7}Future Work}{12}{chapter.7}%
\contentsline {chapter}{\numberline {8}Conclusion}{13}{chapter.8}%
\contentsline {chapter}{\numberline {9}References}{14}{chapter.9}%
