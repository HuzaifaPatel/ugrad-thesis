\contentsline {chapter}{Abstract}{i}{chapter*.1}%
\contentsline {chapter}{Acknowledgments}{ii}{chapter*.2}%
\contentsline {chapter}{List of Figures}{viii}{section*.4}%
\contentsline {chapter}{List of Tables}{ix}{section*.6}%
\contentsline {chapter}{Listings}{x}{section*.8}%
\contentsline {chapter}{Nomenclature}{xii}{chapter*.10}%
\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}%
\contentsline {section}{\numberline {1.1}The Problem}{2}{section.1.1}%
\contentsline {section}{\numberline {1.2}Addressing the Problem}{3}{section.1.2}%
\contentsline {section}{\numberline {1.3}The Problem (Continued): Research Questions}{4}{section.1.3}%
\contentsline {section}{\numberline {1.4}Motivation}{5}{section.1.4}%
\contentsline {subsection}{\numberline {1.4.1}Why Design a New VMI?}{6}{subsection.1.4.1}%
\contentsline {subsection}{\numberline {1.4.2}Why Design a Hypervisor-Based VMI System?}{7}{subsection.1.4.2}%
\contentsline {subsection}{\numberline {1.4.3}Why use eBPF for Tracing?}{11}{subsection.1.4.3}%
\contentsline {subsection}{\numberline {1.4.4}Why Utilize System Calls for Introspection?}{13}{subsection.1.4.4}%
\contentsline {section}{\numberline {1.5}Thesis Proposal Organization}{13}{section.1.5}%
\contentsline {chapter}{\numberline {2}Background}{15}{chapter.2}%
\contentsline {section}{\numberline {2.1}Overview of Hypervisors}{15}{section.2.1}%
\contentsline {subsection}{\numberline {2.1.1}Type 1 Hypervisor}{16}{subsection.2.1.1}%
\contentsline {subsection}{\numberline {2.1.2}Type 2 Hypervisor}{16}{subsection.2.1.2}%
\contentsline {subsection}{\numberline {2.1.3}Problems With Type 1 \& Type 2 Hypervisor Classifications}{16}{subsection.2.1.3}%
\contentsline {subsection}{\numberline {2.1.4}Native Hypervisor}{16}{subsection.2.1.4}%
\contentsline {subsection}{\numberline {2.1.5}Emulation Hypervisor}{17}{subsection.2.1.5}%
\contentsline {section}{\numberline {2.2}x86-64 Intel Central Processing Unit}{17}{section.2.2}%
\contentsline {subsection}{\numberline {2.2.1}Exceptions}{17}{subsection.2.2.1}%
\contentsline {subsection}{\numberline {2.2.2}Faults}{18}{subsection.2.2.2}%
\contentsline {subsection}{\numberline {2.2.3}Instructions}{20}{subsection.2.2.3}%
\contentsline {subsection}{\numberline {2.2.4}Registers}{21}{subsection.2.2.4}%
\contentsline {subsection}{\numberline {2.2.5}\%rip Regster}{21}{subsection.2.2.5}%
\contentsline {subsection}{\numberline {2.2.6}\%rdi Regster}{21}{subsection.2.2.6}%
\contentsline {subsection}{\numberline {2.2.7}\%CR3 Register \& Page Table Management}{21}{subsection.2.2.7}%
\contentsline {subsection}{\numberline {2.2.8}Protection Rings}{22}{subsection.2.2.8}%
\contentsline {subsection}{\numberline {2.2.9}Execution Modes}{24}{subsection.2.2.9}%
\contentsline {subsection}{\numberline {2.2.10}Model Specific Register (MSR)}{25}{subsection.2.2.10}%
\contentsline {subsection}{\numberline {2.2.11}Supervisor Mode Access Prevention}{28}{subsection.2.2.11}%
\contentsline {section}{\numberline {2.3}Intel Virtualization Extension (VT-X)}{29}{section.2.3}%
\contentsline {subsection}{\numberline {2.3.1}Overview}{29}{subsection.2.3.1}%
\contentsline {subsection}{\numberline {2.3.2}Novel Instruction Set}{31}{subsection.2.3.2}%
\contentsline {subsection}{\numberline {2.3.3}The Virtual Machine Control Structure (VMCS)}{33}{subsection.2.3.3}%
\contentsline {subsection}{\numberline {2.3.4}VM-Exit}{35}{subsection.2.3.4}%
\contentsline {subsection}{\numberline {2.3.5}VM-Entry}{42}{subsection.2.3.5}%
\contentsline {section}{\numberline {2.4}System Calls}{43}{section.2.4}%
\contentsline {section}{\numberline {2.5}The Kernel Virtual Machine (KVM) Hypervisor \& QEMU}{44}{section.2.5}%
\contentsline {section}{\numberline {2.6}Virtual Machine Introspection}{50}{section.2.6}%
\contentsline {section}{\numberline {2.7}eBPF}{50}{section.2.7}%
\contentsline {subsection}{\numberline {2.7.1}Overview}{50}{subsection.2.7.1}%
\contentsline {subsection}{\numberline {2.7.2}How Does eBPF Work?}{51}{subsection.2.7.2}%
\contentsline {section}{\numberline {2.8}The Linux Kernel Tracepoint API}{53}{section.2.8}%
\contentsline {subsection}{\numberline {2.8.1}Overview}{53}{subsection.2.8.1}%
\contentsline {subsection}{\numberline {2.8.2}Identifing Traceable Kernel Subsystems}{54}{subsection.2.8.2}%
\contentsline {subsection}{\numberline {2.8.3}Identifing Tracepoint Events}{55}{subsection.2.8.3}%
\contentsline {subsection}{\numberline {2.8.4}Tracepoint Format File}{55}{subsection.2.8.4}%
\contentsline {subsection}{\numberline {2.8.5}Tracepoint Definition}{56}{subsection.2.8.5}%
\contentsline {section}{\numberline {2.9}Intrusion Detecion Prevention System}{57}{section.2.9}%
\contentsline {subsection}{\numberline {2.9.1}Overview}{57}{subsection.2.9.1}%
\contentsline {subsection}{\numberline {2.9.2}Signature-Based Detection}{58}{subsection.2.9.2}%
\contentsline {subsection}{\numberline {2.9.3}Anomaly-Based Detection}{58}{subsection.2.9.3}%
\contentsline {chapter}{\numberline {3}Related Work}{60}{chapter.3}%
\contentsline {section}{\numberline {3.1}Nitro}{60}{section.3.1}%
\contentsline {subsection}{\numberline {3.1.1}Properties of Nitro}{60}{subsection.3.1.1}%
\contentsline {subsubsection}{Nitro Mechanism for Tracing System Calls From The Hypervisor}{60}{subsubsection*.11}%
\contentsline {paragraph}{Tracing SYSCALL \& SYSRET Based System Calls}{61}{paragraph*.12}%
\contentsline {paragraph}{Tracing SYSENTER \& SYSEXIT Based System Calls}{61}{paragraph*.13}%
\contentsline {subsubsection}{Process Identification}{62}{subsubsection*.14}%
\contentsline {subsubsection}{How Nitro Empowers Anomaly Detection}{62}{subsubsection*.15}%
\contentsline {section}{\numberline {3.2}pH-based System Call Sequences}{63}{section.3.2}%
\contentsline {chapter}{\numberline {4}Contributions \& Improvements On Related Work}{64}{chapter.4}%
\contentsline {chapter}{\numberline {5}Designing Frail}{66}{chapter.5}%
\contentsline {section}{\numberline {5.1}Tracing KVM VM System Calls}{66}{section.5.1}%
\contentsline {subsection}{\numberline {5.1.1}Trapping Systen Calls from VMX Non-Root to VMX Root}{67}{subsection.5.1.1}%
\contentsline {subsection}{\numberline {5.1.2}Emulating SYSCALL, SYSRET, SYSENTER}{67}{subsection.5.1.2}%
\contentsline {subsection}{\numberline {5.1.3}Ensuring Every System Call Instruction is Trapped}{68}{subsection.5.1.3}%
\contentsline {subsection}{\numberline {5.1.4}Extending the Linux Kernel Tracepoint API}{68}{subsection.5.1.4}%
\contentsline {section}{\numberline {5.2}Tracing KVM VM Processes}{70}{section.5.2}%
\contentsline {section}{\numberline {5.3}Monitoring Sequence of System Calls}{72}{section.5.3}%
\contentsline {subsection}{\numberline {5.3.1}Overview}{72}{subsection.5.3.1}%
\contentsline {subsection}{\numberline {5.3.2}Profiling Normal Behavior}{73}{subsection.5.3.2}%
\contentsline {section}{\numberline {5.4}Responding to Anomalous Behavior}{74}{section.5.4}%
\contentsline {subsection}{\numberline {5.4.1}Terminating Malicious Virtual Machine}{74}{subsection.5.4.1}%
\contentsline {subsection}{\numberline {5.4.2}Terminating Malicious Process}{74}{subsection.5.4.2}%
\contentsline {chapter}{\numberline {6}Implementation of Frail VMI}{76}{chapter.6}%
\contentsline {section}{\numberline {6.1}User Space Component}{76}{section.6.1}%
\contentsline {section}{\numberline {6.2}Kernel Space Component}{76}{section.6.2}%
\contentsline {section}{\numberline {6.3}Extending the Linux Kernel Tracepoint API}{76}{section.6.3}%
\contentsline {section}{\numberline {6.4}Tracing Processess}{76}{section.6.4}%
\contentsline {section}{\numberline {6.5}Proof of Tracability of all KVM Guest System Calls}{76}{section.6.5}%
\contentsline {chapter}{\numberline {7}Future Work (Winter 2022)}{77}{chapter.7}%
\contentsline {section}{\numberline {7.1}Implementing Sequences of System Calls}{77}{section.7.1}%
\contentsline {section}{\numberline {7.2}Responding to Anomalies}{77}{section.7.2}%
\contentsline {section}{\numberline {7.3}Measuring Frail's Performance}{77}{section.7.3}%
\contentsline {section}{\numberline {7.4}Discuss the shortcomings of our VMI System}{77}{section.7.4}%
\contentsline {section}{\numberline {7.5}Discuss Future Work (Beyond Winter 2022)}{77}{section.7.5}%
