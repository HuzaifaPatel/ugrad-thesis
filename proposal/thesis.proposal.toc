\contentsline {chapter}{Abstract}{ii}{chapter*.1}%
\contentsline {chapter}{Acknowledgments}{iii}{chapter*.2}%
\contentsline {chapter}{List of Figures}{viii}{section*.4}%
\contentsline {chapter}{List of Tables}{ix}{section*.6}%
\contentsline {chapter}{Listings}{x}{section*.8}%
\contentsline {chapter}{Nomenclature}{xi}{chapter*.10}%
\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}%
\contentsline {section}{\numberline {1.1}The Problem}{2}{section.1.1}%
\contentsline {section}{\numberline {1.2}Addressing the Problem}{3}{section.1.2}%
\contentsline {section}{\numberline {1.3}The Problem (Continued): Research Questions}{4}{section.1.3}%
\contentsline {section}{\numberline {1.4}Motivation}{5}{section.1.4}%
\contentsline {subsection}{\numberline {1.4.1}Why Design a New VMI?}{5}{subsection.1.4.1}%
\contentsline {subsection}{\numberline {1.4.2}Why Design a Hypervisor-Based VMI System?}{7}{subsection.1.4.2}%
\contentsline {subsection}{\numberline {1.4.3}Why use eBPF for Tracing?}{11}{subsection.1.4.3}%
\contentsline {subsection}{\numberline {1.4.4}Why Utilize System Calls for Introspection?}{13}{subsection.1.4.4}%
\contentsline {section}{\numberline {1.5}Thesis Proposal Organization}{13}{section.1.5}%
\contentsline {chapter}{\numberline {2}Background}{15}{chapter.2}%
\contentsline {section}{\numberline {2.1}Overview of Hypervisors}{15}{section.2.1}%
\contentsline {subsection}{\numberline {2.1.1}Type 1 Hypervisor}{16}{subsection.2.1.1}%
\contentsline {subsection}{\numberline {2.1.2}Type 2 Hypervisor}{16}{subsection.2.1.2}%
\contentsline {subsection}{\numberline {2.1.3}Problems With Type 1 \& Type 2 Hypervisor Classifications}{16}{subsection.2.1.3}%
\contentsline {subsection}{\numberline {2.1.4}Native Hypervisor}{16}{subsection.2.1.4}%
\contentsline {subsection}{\numberline {2.1.5}Emulation Hypervisor}{17}{subsection.2.1.5}%
\contentsline {section}{\numberline {2.2}x86-64 Intel Central Processing Unit}{17}{section.2.2}%
\contentsline {subsection}{\numberline {2.2.1}Exceptions}{17}{subsection.2.2.1}%
\contentsline {subsection}{\numberline {2.2.2}Faults}{18}{subsection.2.2.2}%
\contentsline {subsection}{\numberline {2.2.3}Instructions}{19}{subsection.2.2.3}%
\contentsline {subsection}{\numberline {2.2.4}Registers}{20}{subsection.2.2.4}%
\contentsline {subsection}{\numberline {2.2.5}\%rip Regster}{20}{subsection.2.2.5}%
\contentsline {subsection}{\numberline {2.2.6}\%rdi Regster}{20}{subsection.2.2.6}%
\contentsline {subsection}{\numberline {2.2.7}\%CR3 Register \& Page Table Management}{20}{subsection.2.2.7}%
\contentsline {subsection}{\numberline {2.2.8}Protection Rings}{21}{subsection.2.2.8}%
\contentsline {subsection}{\numberline {2.2.9}Execution Modes}{23}{subsection.2.2.9}%
\contentsline {subsection}{\numberline {2.2.10}Model Specific Register (MSR)}{24}{subsection.2.2.10}%
\contentsline {subsection}{\numberline {2.2.11}Supervisor Mode Access Prevention}{27}{subsection.2.2.11}%
\contentsline {section}{\numberline {2.3}Intel Virtualization Extension (VT-X)}{28}{section.2.3}%
\contentsline {subsection}{\numberline {2.3.1}Overview}{28}{subsection.2.3.1}%
\contentsline {subsection}{\numberline {2.3.2}Novel Instruction Set}{30}{subsection.2.3.2}%
\contentsline {subsection}{\numberline {2.3.3}The Virtual Machine Control Structure (VMCS)}{32}{subsection.2.3.3}%
\contentsline {subsection}{\numberline {2.3.4}VM-Exit}{34}{subsection.2.3.4}%
\contentsline {subsection}{\numberline {2.3.5}VM-Entry}{40}{subsection.2.3.5}%
\contentsline {section}{\numberline {2.4}System Calls}{42}{section.2.4}%
\contentsline {section}{\numberline {2.5}The Kernel Virtual Machine (KVM) Hypervisor \& QEMU}{43}{section.2.5}%
\contentsline {section}{\numberline {2.6}eBPF}{49}{section.2.6}%
\contentsline {subsection}{\numberline {2.6.1}Overview}{49}{subsection.2.6.1}%
\contentsline {subsection}{\numberline {2.6.2}How Does eBPF Work?}{49}{subsection.2.6.2}%
\contentsline {section}{\numberline {2.7}The Linux Kernel Tracepoint API}{51}{section.2.7}%
\contentsline {subsection}{\numberline {2.7.1}Overview}{51}{subsection.2.7.1}%
\contentsline {subsection}{\numberline {2.7.2}Identifing Traceable Kernel Subsystems}{52}{subsection.2.7.2}%
\contentsline {subsection}{\numberline {2.7.3}Identifing Tracepoint Events}{53}{subsection.2.7.3}%
\contentsline {subsection}{\numberline {2.7.4}Tracepoint Format File}{54}{subsection.2.7.4}%
\contentsline {subsection}{\numberline {2.7.5}Tracepoint Definition}{55}{subsection.2.7.5}%
\contentsline {section}{\numberline {2.8}Intrusion Detecion Prevention System}{56}{section.2.8}%
\contentsline {subsection}{\numberline {2.8.1}Overview}{56}{subsection.2.8.1}%
\contentsline {subsection}{\numberline {2.8.2}Signature-Based Detection}{56}{subsection.2.8.2}%
\contentsline {subsection}{\numberline {2.8.3}Anomaly-Based Detection}{56}{subsection.2.8.3}%
\contentsline {section}{\numberline {2.9}Virtual Machine Introspection}{57}{section.2.9}%
\contentsline {subsection}{\numberline {2.9.1}Overview}{57}{subsection.2.9.1}%
\contentsline {subsection}{\numberline {2.9.2}The Semantic Gap Problem}{58}{subsection.2.9.2}%
\contentsline {chapter}{\numberline {3}Related Work}{59}{chapter.3}%
\contentsline {section}{\numberline {3.1}Nitro}{59}{section.3.1}%
\contentsline {subsection}{\numberline {3.1.1}Overview}{59}{subsection.3.1.1}%
\contentsline {subsection}{\numberline {3.1.2}Properties of Nitro}{59}{subsection.3.1.2}%
\contentsline {subsubsection}{Nitro's Mechanism for Tracing System Calls From The Hypervisor}{59}{subsubsection*.11}%
\contentsline {paragraph}{Tracing SYSCALL \& SYSRET Based System Calls}{60}{paragraph*.12}%
\contentsline {subsubsection}{Process Identification}{61}{subsubsection*.13}%
\contentsline {subsubsection}{How Nitro Empowers Anomaly Detection}{61}{subsubsection*.14}%
\contentsline {section}{\numberline {3.2}pH}{61}{section.3.2}%
\contentsline {subsection}{\numberline {3.2.1}Overview}{61}{subsection.3.2.1}%
\contentsline {subsection}{\numberline {3.2.2}Classifying Normal Profiles}{62}{subsection.3.2.2}%
\contentsline {subsection}{\numberline {3.2.3}Responding to Anomalous Process's}{62}{subsection.3.2.3}%
\contentsline {section}{\numberline {3.3}LibVMI}{63}{section.3.3}%
\contentsline {chapter}{\numberline {4}Contributions \& Improvements On Related Work}{65}{chapter.4}%
\contentsline {chapter}{\numberline {5}Designing Frail}{66}{chapter.5}%
\contentsline {section}{\numberline {5.1}Tracing KVM VM System Calls}{66}{section.5.1}%
\contentsline {subsection}{\numberline {5.1.1}Trapping SYSCALL/SYSRET from VMX Non-Root to VMX Root}{67}{subsection.5.1.1}%
\contentsline {subsection}{\numberline {5.1.2}Emulating SYSCALL \& SYSRET Instructions}{67}{subsection.5.1.2}%
\contentsline {subsection}{\numberline {5.1.3}Ensuring Every System Call Instruction is Trapped}{69}{subsection.5.1.3}%
\contentsline {subsection}{\numberline {5.1.4}Verifiying a SYSCALL/SYSRET Caused a VM-exit}{70}{subsection.5.1.4}%
\contentsline {subsection}{\numberline {5.1.5}Extending the Linux Kernel Tracepoint API}{70}{subsection.5.1.5}%
\contentsline {section}{\numberline {5.2}Tracing KVM VM Processes}{72}{section.5.2}%
\contentsline {section}{\numberline {5.3}Generating Sequences of System Calls}{75}{section.5.3}%
\contentsline {section}{\numberline {5.4}Storing Sequences of System Calls}{75}{section.5.4}%
\contentsline {section}{\numberline {5.5}Measuring Anomalous Behavior}{76}{section.5.5}%
\contentsline {section}{\numberline {5.6}Responding to Anomalous Behavior}{77}{section.5.6}%
\contentsline {subsection}{\numberline {5.6.1}Terminating Malicious Virtual Machine}{77}{subsection.5.6.1}%
\contentsline {subsection}{\numberline {5.6.2}Terminating Malicious Process}{78}{subsection.5.6.2}%
\contentsline {chapter}{\numberline {6}Testing Frail}{79}{chapter.6}%
\contentsline {section}{\numberline {6.1}Overview}{79}{section.6.1}%
\contentsline {subsection}{\numberline {6.1.1}Methodology}{80}{subsection.6.1.1}%
\contentsline {section}{\numberline {6.2}Testing Frail's Ability to Trace Process System Calls}{80}{section.6.2}%
\contentsline {subsection}{\numberline {6.2.1}Validating Sequences of System Calls}{80}{subsection.6.2.1}%
\contentsline {subsection}{\numberline {6.2.2}Validating System Calls}{82}{subsection.6.2.2}%
\contentsline {subsection}{\numberline {6.2.3}Results: Testing Frail's Correctness}{82}{subsection.6.2.3}%
\contentsline {section}{\numberline {6.3}Testing Anomaly Detection}{85}{section.6.3}%
\contentsline {section}{\numberline {6.4}VM-Exit Benchmark for Exception\_NMI \& WRMSR}{86}{section.6.4}%
\contentsline {chapter}{\numberline {7}Shortcomings of Frail}{88}{chapter.7}%
\contentsline {section}{\numberline {7.1}Forcing VM-exits is Slow}{88}{section.7.1}%
\contentsline {section}{\numberline {7.2}Hypervisor-based VMI or IPS is Intrusive}{89}{section.7.2}%
\contentsline {chapter}{\numberline {8}Future Work}{91}{chapter.8}%
\contentsline {section}{\numberline {8.1}Creating a GUI for Frail}{91}{section.8.1}%
\contentsline {section}{\numberline {8.2}Collecting Data from Task\_Struct Struct}{91}{section.8.2}%
\contentsline {subsection}{\numberline {8.2.1}Finding the Per-CPU variable current\_task}{92}{subsection.8.2.1}%
\contentsline {section}{\numberline {8.3}Workload Characterization}{92}{section.8.3}%
\contentsline {chapter}{\numberline {9}Conclusion}{94}{chapter.9}%
\contentsline {chapter}{\numberline {10}Appendix}{99}{chapter.10}%
\contentsline {section}{\numberline {10.1}Source Code of VM\_Exit Counter}{99}{section.10.1}%
